{
  "openapi": "3.0.1",
  "info": {
      "title": "大大的测试",
      "description": "",
      "version": "1.0.0"
  },
  "tags": [],
  "paths": {
      "/plants123": {
          "get": {
              "summary": "/plants123",
              "deprecated": false,
              "description": "从系统中返回用户有权访问的所有植物",
              "tags": [],
              "parameters": [
                  {
                      "name": "limit",
                      "in": "query",
                      "description": "The maximum number of results to return",
                      "required": false,
                      "schema": {
                          "type": "integer",
                          "format": "int32"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "array",
                                  "items": {
                                      "$ref": "#/components/schemas/Plant"
                                  }
                              }
                          }
                      },
                      "headers": {}
                  },
                  "400": {
                      "description": "",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Error"
                              }
                          }
                      },
                      "headers": {}
                  }
              },
              "security": [
                {
                  "bearerAuth": []
                }
              ]
          },
          "post": {
              "summary": "/plants",
              "deprecated": false,
              "description": "Creates a new plant in the store",
              "tags": [],
              "parameters": [],
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/NewPlant"
                          },
                          "example": ""
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Plant"
                              }
                          }
                      },
                      "headers": {}
                  },
                  "400": {
                      "description": "",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Error"
                              }
                          }
                      },
                      "headers": {}
                  }
              },
              "security": []
          }
      },
      "/plants/{id}": {
          "delete": {
              "summary": "/plants/{id}",
              "deprecated": false,
              "description": "Deletes a single plant based on the ID supplied",
              "tags": [],
              "parameters": [
                  {
                      "name": "id",
                      "in": "path",
                      "description": "ID of plant to delete",
                      "required": true,
                      "example": 0,
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      }
                  }
              ],
              "responses": {
                  "204": {
                      "description": "",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "object",
                                  "properties": {}
                              }
                          }
                      },
                      "headers": {}
                  },
                  "400": {
                      "description": "",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Error"
                              }
                          }
                      },
                      "headers": {}
                  }
              },
              "security": []
          }
      }
  },
  "components": {
      "schemas": {
          "Plant": {
              "required": [
                  "name"
              ],
              "type": "object",
              "properties": {
                  "name": {
                      "description": "The name of the plant",
                      "type": "string"
                  },
                  "tag": {
                      "description": "Tag to specify the type",
                      "type": "string"
                  }
              }
          },
          "NewPlant": {
              "allOf": [
                  {
                      "$ref": "#/components/schemas/Plant"
                  },
                  {
                      "required": [
                          "id"
                      ],
                      "type": "object",
                      "properties": {
                          "id": {
                              "description": "Identification number of the plant",
                              "type": "integer",
                              "format": "int64"
                          }
                      }
                  }
              ]
          },
          "Error": {
              "required": [
                  "error",
                  "message"
              ],
              "type": "object",
              "properties": {
                  "error": {
                      "type": "integer",
                      "format": "int32"
                  },
                  "message": {
                      "type": "string"
                  }
              }
          }
      },
      "securitySchemes": {}
  },
  "servers": []
}